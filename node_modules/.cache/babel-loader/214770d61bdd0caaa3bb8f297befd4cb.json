{"ast":null,"code":"import _regeneratorRuntime from \"G:\\\\MERN\\\\keeper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"G:\\\\MERN\\\\keeper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"G:\\\\MERN\\\\keeper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"G:\\\\MERN\\\\keeper\\\\src\\\\components\\\\CheckoutForm\\\\AddressForm.jsx\";\nimport { Typography, Grid, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport FormInput from \"./CustomTextField\";\nimport { commerce } from \"../../lib/commerce\";\n\nconst AddressForm = ({\n  checkoutToken\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        shippingCountries = _useState2[0],\n        setShippingCountries = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        shippingCountry = _useState4[0],\n        setShippingCountry = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        shippingSubdivisions = _useState6[0],\n        setShippingSubdivisions = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        shippingSubdivision = _useState8[0],\n        setShippingSubdivision = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        shippingOptions = _useState10[0],\n        setShippingOptions = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        shippingOption = _useState12[0],\n        setShippingOption = _useState12[1];\n\n  const methods = useForm();\n\n  const _Object$entries$map = Object.entries(shippingCountry).map(([code, name]) => ({\n    id: code,\n    label: name\n  })),\n        countries = _Object$entries$map.countries;\n\n  const fetchCountries = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(checkoutTokenId) {\n      var _yield$commerce$servi, countries;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return commerce.services.localeListShippingCountries(checkoutTokenId);\n\n          case 2:\n            _yield$commerce$servi = _context.sent;\n            countries = _yield$commerce$servi.countries;\n            setShippingCountries(countries);\n            setShippingCountry(Object.keys(countries[0]));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchCountries(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"console.loh(\\\"ji\\\")\", /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, \" Shipping Address\"), /*#__PURE__*/React.createElement(FormProvider, Object.assign({}, methods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"firstName\",\n    label: \"First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"lastName\",\n    label: \"Last Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"email\",\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"address1\",\n    label: \"Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"City\",\n    label: \"City\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"ZIP\",\n    label: \"ZIP\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Shipping Country\"), /*#__PURE__*/React.createElement(Select, {\n    value: shippingCountry,\n    onChange: e => setShippingCountry(e.target.value),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    key: country.id,\n    value: country.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }\n  }, country.label)))))));\n};\n\nexport default AddressForm;","map":{"version":3,"sources":["G:/MERN/keeper/src/components/CheckoutForm/AddressForm.jsx"],"names":["Typography","Grid","InputLabel","MenuItem","Select","React","useState","useEffect","FormProvider","useForm","FormInput","commerce","AddressForm","checkoutToken","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","shippingOptions","setShippingOptions","shippingOption","setShippingOption","methods","Object","entries","map","code","name","id","label","countries","fetchCountries","checkoutTokenId","services","localeListShippingCountries","keys","e","target","value","country"],"mappings":"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","sourcesContent":["import { Typography,Grid,InputLabel, MenuItem, Select} from \"@material-ui/core\";\r\nimport React,{useState,useEffect} from \"react\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport FormInput from \"./CustomTextField\"\r\nimport {commerce} from \"../../lib/commerce\"\r\n\r\n\r\nconst AddressForm=({checkoutToken})=>{\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState('');\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState('');\r\n  const methods=useForm();\r\n  const {countries}=Object.entries(shippingCountry).map(([code,name])=>({id:code, label:name}))\r\n  const fetchCountries=async(checkoutTokenId)=>{\r\n    const {countries}=await commerce.services.localeListShippingCountries(checkoutTokenId)\r\n    setShippingCountries(countries)\r\n    setShippingCountry(Object.keys(countries[0]))\r\n\r\n}\r\n\r\n  \r\n\r\n  return(\r\n    <>\r\n    console.loh(\"ji\")\r\n    <Typography> Shipping Address</Typography>\r\n    <FormProvider {...methods}/>\r\n    <form onSubmit=''>\r\n        <Grid container spacing={3} > \r\n        <FormInput required name='firstName' label='First Name' />\r\n        <FormInput required name='lastName' label='Last Name' />\r\n        <FormInput required name='email' label='Email' />\r\n        <FormInput required name='address1' label='Address' />\r\n        <FormInput required name='City' label='City' />\r\n        <FormInput required name='ZIP' label='ZIP' />\r\n\r\n        <Grid  item xs={12} sm={6}>\r\n          <InputLabel>Shipping Country</InputLabel>\r\n          <Select value={shippingCountry} onChange={(e)=>setShippingCountry(e.target.value)} fullWidth>\r\n              {countries.map((country)=>\r\n              (<MenuItem key={country.id} value={country.id}>{country.label}</MenuItem>))}\r\n              \r\n          </Select>        \r\n        </Grid>\r\n\r\n        \r\n\r\n\r\n        </Grid>\r\n\r\n    </form>\r\n    \r\n    </>\r\n\r\n  )\r\n\r\n}\r\nexport default AddressForm"]},"metadata":{},"sourceType":"module"}