{"ast":null,"code":"import _objectSpread from \"G:\\\\MERN\\\\keeper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"G:\\\\MERN\\\\keeper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"G:\\\\MERN\\\\keeper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"G:\\\\MERN\\\\keeper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"G:\\\\MERN\\\\keeper\\\\src\\\\components\\\\CheckoutForm\\\\AddressForm.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { commerce } from '../../lib/commerce';\nimport FormInput from './CustomTextField';\n\nconst AddressForm = ({\n  checkoutToken,\n  next\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        shippingCountries = _useState2[0],\n        setShippingCountries = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        shippingCountry = _useState4[0],\n        setShippingCountry = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        shippingSubdivisions = _useState6[0],\n        setShippingSubdivisions = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        shippingSubdivision = _useState8[0],\n        setShippingSubdivision = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        shippingOptions = _useState10[0],\n        setShippingOptions = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        shippingOption = _useState12[0],\n        setShippingOption = _useState12[1];\n\n  const methods = useForm();\n\n  const fetchShippingCountries = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(checkoutTokenId) {\n      var _yield$commerce$servi, countries;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return commerce.services.localeListShippingCountries(checkoutTokenId);\n\n          case 2:\n            _yield$commerce$servi = _context.sent;\n            countries = _yield$commerce$servi.countries;\n            setShippingCountries(countries);\n            setShippingCountry(Object.keys(countries)[0]);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function fetchShippingCountries(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const fetchSubdivisions = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(countryCode) {\n      var _yield$commerce$servi2, subdivisions;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return commerce.services.localeListSubdivisions(countryCode);\n\n          case 2:\n            _yield$commerce$servi2 = _context2.sent;\n            subdivisions = _yield$commerce$servi2.subdivisions;\n            setShippingSubdivisions(subdivisions);\n            setShippingSubdivision(Object.keys(subdivisions)[0]);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function fetchSubdivisions(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const fetchShippingOptions = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(checkoutTokenId, country, stateProvince = null) {\n      var options;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return commerce.checkout.getShippingOptions(checkoutTokenId, {\n              country,\n              region: stateProvince\n            });\n\n          case 2:\n            options = _context3.sent;\n            setShippingOptions(options);\n            setShippingOption(options[0].id);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    return function fetchShippingOptions(_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n  useEffect(() => {\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n  }, [shippingSubdivision]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Shipping address\"), /*#__PURE__*/React.createElement(FormProvider, Object.assign({}, methods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: methods.handleSubmit(data => next(_objectSpread(_objectSpread({}, data), {}, {\n      shippingCountry,\n      shippingSubdivision,\n      shippingOption\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"firstName\",\n    label: \"First name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"lastName\",\n    label: \"Last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"address1\",\n    label: \"Address line 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"email\",\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"city\",\n    label: \"City\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"zip\",\n    label: \"Zip / Postal code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Shipping Country\"), /*#__PURE__*/React.createElement(Select, {\n    value: shippingCountry,\n    fullWidth: true,\n    onChange: e => setShippingCountry(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, Object.entries(shippingCountries).map(([code, name]) => ({\n    id: code,\n    label: name\n  })).map(item => /*#__PURE__*/React.createElement(MenuItem, {\n    key: item.id,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, item.label)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Shipping Subdivision\"), /*#__PURE__*/React.createElement(Select, {\n    value: shippingSubdivision,\n    fullWidth: true,\n    onChange: e => setShippingSubdivision(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, Object.entries(shippingSubdivisions).map(([code, name]) => ({\n    id: code,\n    label: name\n  })).map(item => /*#__PURE__*/React.createElement(MenuItem, {\n    key: item.id,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, item.label)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"Shipping Options\"), /*#__PURE__*/React.createElement(Select, {\n    value: shippingOption,\n    fullWidth: true,\n    onChange: e => setShippingOption(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, shippingOptions.map(sO => ({\n    id: sO.id,\n    label: \"\".concat(sO.description, \" - (\").concat(sO.price.formatted_with_symbol, \")\")\n  })).map(item => /*#__PURE__*/React.createElement(MenuItem, {\n    key: item.id,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, item.label))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    variant: \"outlined\",\n    to: \"/cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Back to Cart\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Next\")))));\n};\n\nexport default AddressForm;","map":{"version":3,"sources":["G:/MERN/keeper/src/components/CheckoutForm/AddressForm.jsx"],"names":["React","useState","useEffect","InputLabel","Select","MenuItem","Button","Grid","Typography","useForm","FormProvider","Link","commerce","FormInput","AddressForm","checkoutToken","next","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","shippingOptions","setShippingOptions","shippingOption","setShippingOption","methods","fetchShippingCountries","checkoutTokenId","services","localeListShippingCountries","countries","Object","keys","fetchSubdivisions","countryCode","localeListSubdivisions","subdivisions","fetchShippingOptions","country","stateProvince","checkout","getShippingOptions","region","options","id","handleSubmit","data","e","target","value","entries","map","code","name","label","item","sO","description","price","formatted_with_symbol","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/commerce';\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState('');\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState('');\r\n  const methods = useForm();\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n      <FormProvider {...methods}>\r\n        <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n          <Grid container spacing={3}>\r\n            <FormInput required name=\"firstName\" label=\"First name\" />\r\n            <FormInput required name=\"lastName\" label=\"Last name\" />\r\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\r\n            <FormInput required name=\"email\" label=\"Email\" />\r\n            <FormInput required name=\"city\" label=\"City\" />\r\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddressForm;"]},"metadata":{},"sourceType":"module"}