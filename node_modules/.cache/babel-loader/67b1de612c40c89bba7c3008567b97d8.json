{"ast":null,"code":"import _regeneratorRuntime from \"G:\\\\MERN\\\\keeper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"G:\\\\MERN\\\\keeper\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"G:\\\\MERN\\\\keeper\\\\src\\\\components\\\\CheckoutForm\\\\PaymentForm.jsx\";\nimport React from \"react\";\nimport { Divider, Typography, Button } from \"@material-ui/core\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements, CardElement, ElementsConsumer } from \"@stripe/react-stripe-js\";\nimport Review from \"./Review\";\n\nconst PaymentForm = ({\n  checkoutToken,\n  backStep,\n  onCaptureCheckout,\n  shippingData,\n  nextStep,\n  timeout\n}) => {\n  const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY);\n\n  const handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e, elements, stripe) {\n      var cardElement, _yield$stripe$createP, error, paymentMethod, orderData;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n\n            if (!(!stripe || !elements)) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 3:\n            cardElement = elements.getElement(CardElement);\n            _context.next = 6;\n            return stripe.createPaymentMethod({\n              type: 'card',\n              card: cardElement\n            });\n\n          case 6:\n            _yield$stripe$createP = _context.sent;\n            error = _yield$stripe$createP.error;\n            paymentMethod = _yield$stripe$createP.paymentMethod;\n            if (error) console.log(error);else {\n              orderData = {\n                line_items: checkoutToken.live.line_items,\n                customer: {\n                  firstname: shippingData.firstName,\n                  lastname: shippingData.lastName,\n                  email: shippingData.email\n                },\n                shipping: {\n                  name: 'International',\n                  street: shippingData.address1,\n                  town_city: shippingData.city,\n                  county_state: shippingData.shippingSubdivision,\n                  postal_zip_code: shippingData.zip,\n                  country: shippingData.shippingCountry\n                },\n                fulfillment: {\n                  shipping_method: shippingData.shippingOption\n                },\n                payment: {\n                  gateway: 'stripe',\n                  stripe: {\n                    payment_method_id: paymentMethod.id\n                  }\n                }\n              };\n              onCaptureCheckout(checkoutToken.id, orderData);\n              timeout();\n              nextStep();\n            }\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Review, {\n    checkoutToken: checkoutToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Payment Method\"), /*#__PURE__*/React.createElement(Elements, {\n    stripe: stripePromise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ElementsConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, ({\n    elements,\n    stripe\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e, elements, stripe),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: backStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    disable: !stripe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 30\n    }\n  }, \" Pay \", checkoutToken.live.subtotal.formatted_with_symbol))))));\n};\n\nexport default PaymentForm;","map":{"version":3,"sources":["G:/MERN/keeper/src/components/CheckoutForm/PaymentForm.jsx"],"names":["React","Divider","Typography","Button","loadStripe","Elements","CardElement","ElementsConsumer","Review","PaymentForm","checkoutToken","backStep","onCaptureCheckout","shippingData","nextStep","timeout","stripePromise","process","env","REACT_APP_STRIPE_KEY","handleSubmit","e","elements","stripe","preventDefault","cardElement","getElement","createPaymentMethod","type","card","error","paymentMethod","console","log","orderData","line_items","live","customer","firstname","firstName","lastname","lastName","email","shipping","name","street","address1","town_city","city","county_state","shippingSubdivision","postal_zip_code","zip","country","shippingCountry","fulfillment","shipping_method","shippingOption","payment","gateway","payment_method_id","id","subtotal","formatted_with_symbol"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport {Divider, Typography, Button} from \"@material-ui/core\"\r\nimport {loadStripe} from \"@stripe/stripe-js\"\r\nimport {Elements, CardElement, ElementsConsumer} from \"@stripe/react-stripe-js\"\r\nimport Review from  \"./Review\"\r\n\r\nconst PaymentForm=({checkoutToken, backStep, onCaptureCheckout, shippingData, nextStep, timeout})=>{\r\n\r\n    const stripePromise=loadStripe(process.env.REACT_APP_STRIPE_KEY)\r\n        const handleSubmit=async(e, elements,stripe)=>{\r\n            e.preventDefault()\r\n            if(!stripe || !elements) return ;\r\n            const cardElement=elements.getElement(CardElement)\r\n            const{error,paymentMethod}=await stripe.createPaymentMethod({type:'card', card:cardElement})\r\n            if(error)\r\n             console.log(error)\r\n             else\r\n             {\r\n                const orderData = {\r\n                    line_items: checkoutToken.live.line_items,\r\n                    customer: { firstname: shippingData.firstName, lastname: shippingData.lastName, email: shippingData.email },\r\n                    shipping: { name: 'International', street: shippingData.address1, town_city: shippingData.city, county_state: shippingData.shippingSubdivision, postal_zip_code: shippingData.zip, country: shippingData.shippingCountry },\r\n                    fulfillment: { shipping_method: shippingData.shippingOption },\r\n                    payment: {\r\n                      gateway: 'stripe',\r\n                      stripe: {\r\n                        payment_method_id: paymentMethod.id,\r\n                      },\r\n                    },\r\n                  };\r\n            \r\n                  onCaptureCheckout(checkoutToken.id, orderData)\r\n                 timeout()\r\n             nextStep()\r\n             }\r\n\r\n             \r\n        }\r\n        \r\n    \r\n    return(\r\n        <>\r\n            <Review  checkoutToken={checkoutToken}/>\r\n            <Divider/>\r\n            <Typography  variant=\"h6\" gutterBottom>\r\n                Payment Method\r\n            </Typography>\r\n            <Elements  stripe={stripePromise}>\r\n            <ElementsConsumer>\r\n                {({elements,stripe})=>(\r\n                    <form onSubmit={(e)=>handleSubmit(e,elements,stripe)}>\r\n                        <CardElement/>\r\n                        <br/>\r\n                        <br/>\r\n                        <div>\r\n                            <Button variant=\"outlined\" onClick={backStep}>Back</Button>\r\n                             <Button type=\"submit\" color=\"primary\" variant=\"contained\"disable={!stripe}> Pay {checkoutToken.live.subtotal.formatted_with_symbol}</Button>\r\n                        </div>\r\n\r\n\r\n                       \r\n                    </form>\r\n\r\n                )}\r\n            </ElementsConsumer>\r\n\r\n            </Elements>\r\n\r\n        </>\r\n    )\r\n\r\n                }\r\nexport default PaymentForm"]},"metadata":{},"sourceType":"module"}